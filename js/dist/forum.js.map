{"version":3,"sources":["webpack://@askvortsov/flarum-markdown-tables/webpack/bootstrap","webpack://@askvortsov/flarum-markdown-tables/external \"flarum.extensions['askvortsov-rich-text']\"","webpack://@askvortsov/flarum-markdown-tables/external \"flarum.core.compat['extend']\"","webpack://@askvortsov/flarum-markdown-tables/external \"flarum.core.compat['common/utils/Stream']\"","webpack://@askvortsov/flarum-markdown-tables/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@askvortsov/flarum-markdown-tables/external \"flarum.core.compat['app']\"","webpack://@askvortsov/flarum-markdown-tables/external \"flarum.core.compat['common/components/Button']\"","webpack://@askvortsov/flarum-markdown-tables/external \"flarum.core.compat['common/components/Separator']\"","webpack://@askvortsov/flarum-markdown-tables/external \"flarum.core.compat['common/components/Switch']\"","webpack://@askvortsov/flarum-markdown-tables/external \"flarum.core.compat['common/helpers/listItems']\"","webpack://@askvortsov/flarum-markdown-tables/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@askvortsov/flarum-markdown-tables/./src/common/proseMirror/commands.js","webpack://@askvortsov/flarum-markdown-tables/./src/common/components/TableDropdown.js","webpack://@askvortsov/flarum-markdown-tables/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@askvortsov/flarum-markdown-tables/./src/common/proseMirror/tableKeymap.js","webpack://@askvortsov/flarum-markdown-tables/./src/common/proseMirror/tableSchema.js","webpack://@askvortsov/flarum-markdown-tables/./src/common/configureRichText.js","webpack://@askvortsov/flarum-markdown-tables/external \"flarum.core.compat['components/Post']\"","webpack://@askvortsov/flarum-markdown-tables/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","extensions","core","compat","_extends","assign","target","arguments","length","source","apply","this","tableNodes","schema","nodes","table","table_head","table_body","table_row","table_cell","table_header","inTable","state","includes","selection","$head","parent","type","inTableHead","moveSelectionAfterTableCommand","dispatch","exitTableCommand","before","paragraph","newPosition","after","tr","doc","resolve","e","insertionPosition","insert","setSelection","require","Selection","near","Math","max","scrollIntoView","insertTableRowBeforeCommand","insertTableRowCommand","insertTableRowAfterCommand","tableRowNode","node","newTableCells","forEach","cell","push","attrs","newTableRow","positionToInsert","insertTableColumnAfterCommand","insertTableColumnCommand","insertTableColumnBeforeCommand","targetCell","selectedTable","selectedCellIndex","index","newCells","tableOffset","start","descendants","pos","child","position","reverse","newCell","removeRowCommand","childCount","removeTableCommand","delete","end","removeColumnCommand","cellIndex","resolvedPositions","cellPosition","removeTableContentCommand","$from","$to","sameParent","moveToCellCommand","direction","level","parentIndex","maybeChild","newPos","moveSelectionBeforeTableCommand","moveToNextCellCommand","deleteRange","TableDropdown","subClass","superClass","constructor","__proto__","oninit","vnode","addItem","command","onEditorUpdate","numCols","Stream","numRows","labelCells","getMenu","items","commandsToButtons","commands","map","onclick","click","onkeydown","keydown","app","translator","trans","translation","colCommands","rowCommands","className","listItems","Separator","component","fields","add","placeholder","extractText","bidi","required","Switch","onchange","editorView","currInTable","preventDefault","run","parseInt","headerIndex","text","row","cells","head","body","createChecked","Array","fill","rows","_","replaceSelectionWith","newState","nodeAfterTable","nodeAt","to","active","$","toggleClass","components","FormDropdown","tableKeymap","Enter","Backspace","Delete","Tab","tableNodeSpec","content","isolating","group","selectable","parseDOM","tag","toDOM","class","tableHeadNodeSpec","tableBodyNodeSpec","tableRowNodeSpec","tableCellNodeSpec","style","default","getAttrs","dom","textAlign","tableHeaderNodeSpec","configureRichText","ProseMirrorMenu","TableDropdownComponent","extend","icon","tooltip","MarkdownSerializerBuilder","proseMirror","markdown","richTextSchema","serializeTableRow","columnAlignment","alignment","write","renderInline","match","findAlignment","serializeTableCell","ensureNewLine","table_child","columnAlignments","headRow","serializeTableHead","bodyRow","MarkdownParserBuilder","tokens","block","thead","tbody","th","tok","attrGet","td","tokenizer","enable","SchemaBuilder","override","original","addBefore","ProseMirrorEditorDriver","keymap","initializers","Post","addDataLabelsToTable","labels","getElementsByTagName","textContent","setAttribute","document"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,OAAOC,WAAW,yB,cCAnClC,EAAOD,QAAUkC,OAAOE,KAAKC,OAAe,Q,cCA5CpC,EAAOD,QAAUkC,OAAOE,KAAKC,OAAO,wB,cCApCpC,EAAOD,QAAUkC,OAAOE,KAAKC,OAAO,6B,cCApCpC,EAAOD,QAAUkC,OAAOE,KAAKC,OAAY,K,cCAzCpC,EAAOD,QAAUkC,OAAOE,KAAKC,OAAO,6B,cCApCpC,EAAOD,QAAUkC,OAAOE,KAAKC,OAAO,gC,cCApCpC,EAAOD,QAAUkC,OAAOE,KAAKC,OAAO,6B,cCApCpC,EAAOD,QAAUkC,OAAOE,KAAKC,OAAO,6B,6BCArB,SAASC,IAetB,OAdAA,EAAW1B,OAAO2B,QAAU,SAAUC,GACpC,IAAK,IAAItC,EAAI,EAAGA,EAAIuC,UAAUC,OAAQxC,IAAK,CACzC,IAAIyC,EAASF,UAAUvC,GAEvB,IAAK,IAAIuB,KAAOkB,EACV/B,OAAOkB,UAAUC,eAAe1B,KAAKsC,EAAQlB,KAC/Ce,EAAOf,GAAOkB,EAAOlB,IAK3B,OAAOe,IAGOI,MAAMC,KAAMJ,W,+GCf9B,SAASK,EAAWC,GAClB,MAAO,CACLA,EAAOC,MAAMC,MACbF,EAAOC,MAAME,WACbH,EAAOC,MAAMG,WACbJ,EAAOC,MAAMI,UACbL,EAAOC,MAAMK,WACbN,EAAOC,MAAMM,cAIV,SAASC,EAAQC,GACtB,OAAOV,EAAWU,EAAMT,QAAQU,SAASD,EAAME,UAAUC,MAAMC,OAAOC,MAGxE,SAASC,EAAYN,GACnB,OAAOA,EAAME,UAAUC,MAAMC,OAAOC,OAASL,EAAMT,OAAOC,MAAMM,aAG3D,SAASS,EAA+BP,EAAOQ,GACpD,OAAOC,EAAiBT,EAAOQ,GAAU,GAO3C,SAASC,EAAiBT,EAAOQ,EAAUE,QAAgB,IAAhBA,OAAS,GAElD,IAAMnB,EAASS,EAAMT,OAErB,IAAKQ,EAAQC,GACX,OAAO,EAGT,GAAIQ,EAAU,CAIZ,IAAMH,EAAOd,EAAOC,MAAMmB,UACpBC,EAAcF,EAASV,EAAME,UAAUC,MAAMO,QAAQ,GAAK,EAAIV,EAAME,UAAUC,MAAMU,OAAO,GAAK,EAChGC,EAAKd,EAAMc,GAGjB,IACEA,EAAGC,IAAIC,QAAQJ,GACf,MAAOK,GACP,IAAMC,EAAoBR,EAASE,EAAc,EAAIA,EAAc,EACnEE,EAAGK,OAAOD,EAAmBb,EAAKrC,UAGpC8C,EAAGM,aAAaC,EAAQ,GAAyBC,UAAUC,KAAKT,EAAGC,IAAIC,QAAQQ,KAAKC,IAAI,EAAGb,IAAe,IAC1GJ,EAASM,EAAGY,kBAEd,OAAO,EAGF,SAASC,EAA4B3B,EAAOQ,GACjD,OAAOoB,GAAsB,EAAM5B,EAAOQ,GAGrC,SAASqB,EAA2B7B,EAAOQ,GAChD,OAAOoB,GAAsB,EAAO5B,EAAOQ,GAG7C,SAASoB,EAAsBlB,EAAQV,EAAOQ,GAE5C,IAAMjB,EAASS,EAAMT,OAErB,IAAKQ,EAAQC,IAAUM,EAAYN,GACjC,OAAO,EAGT,GAAIQ,EAAU,KACJL,EAAUH,EAAME,UAAhBC,MACF2B,EAAe3B,EAAM4B,MAAM,GAE3BC,EAAgB,GACtBF,EAAaG,SAAQ,SAACC,GACpBF,EAAcG,KAAK5C,EAAOC,MAAMK,WAAW7B,OAAOkE,EAAKE,WAEzD,IAAMC,EAAc9C,EAAOC,MAAMI,UAAU5B,OAAO,KAAMgE,GAClDM,EAAmB5B,EAASP,EAAMO,QAAQ,GAAKP,EAAMU,OAAO,GAGlEL,EAFWR,EAAMc,GAAGK,OAAOmB,EAAkBD,GAEjCX,kBAGd,OAAO,EAGF,SAASa,EAA8BvC,EAAOQ,GACnD,OAAOgC,GAAyB,EAAOxC,EAAOQ,GAGzC,SAASiC,EAA+BzC,EAAOQ,GACpD,OAAOgC,GAAyB,EAAMxC,EAAOQ,GAU/C,SAASgC,EAAyB9B,EAAQV,EAAOQ,GAE/C,IAAMjB,EAASS,EAAMT,OAErB,IAAKQ,EAAQC,GACX,OAAO,EAET,GAAIQ,EAAU,CACZ,IAOIkC,EAPEvC,EAAQH,EAAME,UAAUC,MACxBwC,EAAgBxC,EAAM4B,MAAM,GAC5Ba,EAAoBzC,EAAM0C,OAAO,GAGjCC,EAAW,GACXC,EAAc5C,EAAM6C,OAAO,GAGjCL,EAAcM,aAAY,SAAClB,EAAMmB,GAC/B,IAAK5D,EAAWC,GAAQU,SAAS8B,EAAK1B,MACpC,OAAO,EAOT,GAJI0B,EAAK1B,OAASd,EAAOC,MAAMI,YAC7B8C,EAAaX,EAAKoB,MAAMP,IAGtBF,GAAcX,GAAQW,EAAY,CACpC,IAAMU,EAAW1C,EAASiC,EAAc3B,QAAQkC,EAAM,GAAGxC,SAAWiC,EAAc3B,QAAQkC,EAAM,GAAGrC,QAGnGiC,EAASX,KAAK,CAACJ,EAAK1B,KAAM0C,EAAcK,QAM5C,IAAItC,EAAKd,EAAMc,GACf,EAAsBgC,EAASO,UAA/B,wDAA0C,yFAA/BC,EAA+B,EACxCxC,EAAKA,EAAGK,OAAOmC,EAAQ,GAAIA,EAAQ,GAAGtF,UAGxCwC,EAASM,EAAGY,kBAEd,OAAO,EAGF,SAAS6B,EAAiBvD,EAAOQ,GACtC,IAAKT,EAAQC,IAAUM,EAAYN,GACjC,OAAO,EAGT,GAAIQ,EAAU,CACZ,IAAMM,EAAKd,EAAMc,GACXX,EAAQH,EAAME,UAAUC,MAG9B,GAAkC,IAA9BA,EAAM4B,MAAM,GAAGyB,WACjB,OAAOC,EAAmBzD,EAAOQ,GAGnCM,EAAG4C,OAAOvD,EAAM6C,OAAO,GAAK,EAAG7C,EAAMwD,KAAK,GAAK,GAC/CnD,EAASM,EAAGY,kBAGd,OAAO,EAGF,SAASkC,EAAoB5D,EAAOQ,GAEzC,IAAMjB,EAASS,EAAMT,OAErB,IAAKQ,EAAQC,GACX,OAAO,EAGT,GAAIQ,EAAU,CACZ,IAAML,EAAQH,EAAME,UAAUC,MACxBV,EAAQU,EAAM4B,MAAM,GAG1B,GAAkC,IAA9B5B,EAAM4B,MAAM,GAAGyB,WACjB,OAAOC,EAAmBzD,EAAOQ,GAGnC,IACIkC,EADEmB,EAAY1D,EAAM0C,OAAO,GAEzBiB,EAAoB,GACpBf,EAAc5C,EAAM6C,OAAO,GACjCvD,EAAMwD,aAAY,SAAClB,EAAMmB,GACvB,IAAK5D,EAAWC,GAAQU,SAAS8B,EAAK1B,MACpC,OAAO,EAGL0B,EAAK1B,OAASd,EAAOC,MAAMI,YAC7B8C,EAAaX,EAAKyB,YAAcK,EAAY,EAAI9B,EAAKoB,MAAMU,GAAa,MAGtEnB,GAAcX,GAAQW,GACxBoB,EAAkB3B,KAAK1C,EAAMuB,QAAQkC,EAAM,OAI/C,IAAIpC,EAAKd,EAAMc,GACf,EAA2BgD,EAAkBT,UAA7C,wDAAwD,yFAA7CU,EAA6C,EACtDjD,EAAKA,EAAG4C,OAAOX,EAAcgB,EAAaf,QAAU,EAAGD,EAAcgB,EAAaJ,MAAQ,GAG5FnD,EAASM,EAAGY,kBAGd,OAAO,EAGF,SAASsC,EAA0BhE,EAAOQ,GAC/C,IAAKT,EAAQC,GACX,OAAO,EAFgD,MAKlCA,EAAME,UAArB+D,EALiD,EAKjDA,MAAOC,EAL0C,EAK1CA,IAGf,OAAID,EAAMjB,OAAO,IAAMiB,EAAMf,IAAM,GAAKe,EAAMN,KAAK,IAAMO,EAAIhB,IAAM,EAC1DO,EAAmBzD,EAAOQ,GAI/ByD,EAAMjB,OAAO,IAAMiB,EAAMf,IAAM,GAAKe,EAAMN,KAAK,IAAMO,EAAIhB,IAAM,EAC1DK,EAAiBvD,EAAOQ,IAM5ByD,EAAME,WAAWD,GAOxB,SAASE,EAAkBpE,EAAOQ,EAAU6D,GAC1C,IAAmB,IAAfA,GAAkC,IAAdA,EACtB,OAAO,EAGT,IAAKtE,EAAQC,GAAQ,OAAO,EAI5B,IAFA,IAAMG,EAAQH,EAAME,UAAUC,MAErBmE,GAAS,EAAGA,GAAS,EAAGA,IAAS,CACxC,IAAMC,EAAcpE,EAAM0C,MAAMyB,GAC1BlE,EAASD,EAAM4B,KAAKuC,GAE1B,GAAKlE,EAAL,CASA,GAFeA,EAAOoE,WAAWD,EAAcF,GAE/C,CAEA,IAAMI,GAAwB,IAAfJ,EAAmBlE,EAAM6C,UAAiC,EAATsB,EAN7C,EAM2DnE,EAAMwD,OAA+B,EAATW,EANvF,EAUnB,OAFA9D,EAASR,EAAMc,GAAGM,aAAaC,EAAQ,GAAyBC,UAAUC,KAAKvB,EAAMc,GAAGC,IAAIC,QAAQyD,GAAS,IAAI/C,mBAE1G,IAKT,OAAkB,IAAd2C,EACK9D,EAA+BP,EAAOQ,GAjQ1C,SAAyCR,EAAOQ,GACrD,OAAOC,EAAiBT,EAAOQ,GAAU,GAkQhCkE,CAAgC1E,EAAOQ,GAQ3C,SAASmE,EAAsB3E,EAAOQ,GAC3C,OAAO4D,EAAkBpE,EAAOQ,EAAU,GAG5C,SAASiD,EAAmBzD,EAAOQ,GACjC,IAAML,EAAQH,EAAME,UAAUC,MAK9B,OAJIK,GACFA,EAASR,EAAMc,GAAG8D,YAAYzE,EAAM6C,OAAO,GAAK,EAAG7C,EAAMwD,KAAK,GAAK,KAG9D,EC3RM,SAASkB,IA4JtB,OA5JsC,YCjBzB,IAAwBC,EAAUC,EDiBT,kDCjBSA,EDiBT,GCjBDD,EDiBC,GChB7BxG,UAAYlB,OAAOY,OAAO+G,EAAWzG,WAC9CwG,EAASxG,UAAU0G,YAAcF,EACjCA,EAASG,UAAYF,EDciB,2BAGpCG,OAAA,SAAOC,GAAO,WACZ,YAAMD,OAAN,UAAaC,GAEb9F,KAAKW,MAAQX,KAAK+C,MAAMpC,MACxBX,KAAKW,MAAMoF,QACT/F,KAAK+C,MAAM/B,MACX,SAACL,EAAOQ,GACN,OAAO,EAAK6E,QAAQrF,EAAOQ,KAE7BnB,KAAKiG,eAAepH,KAAKmB,OAG3BA,KAAKkG,QAAUC,IAAO,GACtBnG,KAAKoG,QAAUD,IAAO,GACtBnG,KAAKqG,WAAaF,KAAO,IAjBS,EAoBpCG,QAAA,SAAQC,GAAO,WACb,IAAKvG,KAAKU,UACR,mBAAa4F,QAAb,UAAqBC,GAGvB,IAAMC,EAAoB,SAACC,GACzB,OAAOA,EAASC,KAAI,SAACV,GAAD,OAClB,EAAC,IAAD,CAAQW,QAAS,EAAKC,MAAM/H,KAAK,EAAMmH,EAAQA,SAAUa,UAAW,EAAKC,QAAQjI,KAAK,EAAMmH,EAAQA,UACjGe,IAAIC,WAAWC,MAAf,sDAA2EjB,EAAQkB,kBAKpFC,EAAc,CAClB,CACED,YAAa,gBACblB,QAASzB,GAEX,CACE2C,YAAa,uBACblB,QAAS5C,GAEX,CACE8D,YAAa,sBACblB,QAAS9C,IAIPkE,EAAc,CAClB,CACEF,YAAa,aACblB,QAAS9B,GAEX,CACEgD,YAAa,oBACblB,QAAS1D,GAEX,CACE4E,YAAa,mBACblB,QAASxD,IAIb,OACE,QAAI6E,UAAW,iDACZC,IAAU,GAAD,OAAKd,EAAkBW,GAAvB,CAAqCI,IAAUC,aAAgBhB,EAAkBY,OAjE7D,EAsEpCK,OAAA,WACE,IAAMlB,EAAQ,EAAH,UAASkB,OAAT,WAiDX,OA/CAlB,EAAMmB,IACJ,UACA,SAAKL,UAAU,cACb,eAAQN,IAAIC,WAAWC,MAAM,gEAC7B,WACEI,UAAU,cACVzJ,KAAK,UACLoD,KAAK,SACL2G,YAAaC,IAAYb,IAAIC,WAAWC,MAAM,gEAC9CY,KAAM7H,KAAKkG,QACX4B,UAAQ,KAGZ,IAGFvB,EAAMmB,IACJ,UACA,SAAKL,UAAU,cACb,eAAQN,IAAIC,WAAWC,MAAM,gEAC7B,WACEI,UAAU,cACVzJ,KAAK,UACLoD,KAAK,SACL2G,YAAaC,IAAYb,IAAIC,WAAWC,MAAM,gEAC9CY,KAAM7H,KAAKoG,QACX0B,UAAQ,KAGZ,IAGFvB,EAAMmB,IACJ,aAEA,SAAKL,UAAU,cACZU,IAAOP,UACN,CACE7G,MAAOX,KAAKqG,aACZ2B,SAAUhI,KAAKqG,YAEjBU,IAAIC,WAAWC,MAAM,oEAGzB,GAGKV,GAxH2B,EA2HpC7F,QAAA,WACE,OAAOA,EAAQV,KAAK+C,MAAMpC,MAAMsH,WAAWtH,QA5HT,EA+HpCsF,eAAA,WACEjG,KAAKkI,YAAclI,KAAKU,WAhIU,EAmIpCoG,QAAA,SAAQd,EAASpE,GACD,MAAVA,EAAEhD,KAAyB,UAAVgD,EAAEhD,KACrBoB,KAAK4G,MAAMZ,EAASpE,IArIY,EAyIpCgF,MAAA,SAAMZ,EAASpE,GAGb,OAFAA,EAAEuG,iBACFnI,KAAKgG,QAAUA,EACRhG,KAAKW,MAAMyH,IAAIpI,KAAK+C,MAAM/B,OA5IC,EA+IpCc,OAAA,WD+IG,IAA4BsE,EAAaF,EAAaG,EC9IlDrG,KAAKU,YACRV,KAAKgG,SD6IsBI,EC7IOiC,SAASrI,KAAKoG,WD6IRF,EC7IoBmC,SAASrI,KAAKkG,WD6IrBG,EC7IiCrG,KAAKqG,kBD6InB,IAA7CD,MAAU,QAAmC,IAAhCF,MAAU,QAAsB,IAAnBG,OAAa,GACjE,SAAC1F,EAAOQ,GAEb,IAAMjB,EAASS,EAAMT,OAOrB,IAAKiB,EAAU,OAAO,EAEtB,IAAImH,EAAc,EACd9D,EAAY,EACV3B,EAAO,kBAAM3C,EAAOC,MAAMK,WAAW7B,OAAO,KAAMuB,EAAOqI,KAAKlC,EAAa,QAAQ7B,IAAgB,OAEnGgE,EAAM,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAcvI,EAAOC,MAAMI,UAAU5B,OAAO,KAAM8J,IAOxDlK,EAJQ,SAACmK,EAAMC,GAAP,OAAgBzI,EAAOC,MAAMC,MAAMwI,cAAc,KAAM,CAACF,EAAMC,IAIlEvI,CANG,SAACoI,GAAD,OAAStI,EAAOC,MAAME,WAAW1B,OAAO,KAAM6J,GAOzDE,CAAKF,EAAG,WAAH,EAAOK,MAAM3C,GAAS4C,KAAK,GAAGpC,KATtB,kBAAMxG,EAAOC,MAAMM,aAAa9B,OAAO,KAAMuB,EAAOqI,KAAKlC,EAAa,UAAUiC,IAAkB,WAGpG,sCAAIS,EAAJ,yBAAIA,EAAJ,uBAAa7I,EAAOC,MAAMG,WAAW3B,OAAO,KAAMoK,IAOzD,WAAJ,EACKF,MAAMzC,EAAU,GAChB0C,KAAK,GACLpC,KAAI,SAACsC,GACJ,OAAOR,EAAG,WAAH,EAAOK,MAAM3C,GAAS4C,KAAK,GAAGpC,IAAI7D,SAM7CpB,EAAKd,EAAMc,GAAGwH,qBAAqB1K,GACvC4C,EAASM,EAAGY,kBAIZ,IAAM6G,EAAWvI,EAAMZ,MAAM0B,GACvB0H,EAAiBD,EAASxH,IAAI0H,OAAOF,EAASzH,GAAGZ,UAAUwI,GAAK,GAMtE,OALIF,GAAkBA,EAAenI,OAASd,EAAOC,MAAMoI,MAEzDpH,GADAM,EAAKyH,EAASzH,GAAGK,OAAOoH,EAASzH,GAAGZ,UAAUwI,GAvBxBnJ,EAAOC,MAAMmB,UAAU3C,OAAO,QAwBxC0D,mBAGP,IC3LHrC,KAAKW,MAAMyH,IAAIpI,KAAK+C,MAAM/B,QAlJM,EAsJpCiF,eAAA,WACEjG,KAAKsJ,SAAWtJ,KAAKU,UACrBV,KAAKuJ,EAAE,oBAAoBC,YAAY,SAAUxJ,KAAKsJ,SAxJpB,GACjBtH,EAAQ,GAAyByH,WAAWC,cEhB5D,IAAMC,EAAc,CACzB,YAAazI,EACb,cAAeA,EACf0I,MAAOtE,EACPuE,UAAWlF,EACXmF,OAAQnF,EACR,gBAAiBA,EACjB,aAAcA,EACdoF,IAAKzE,EACL,YHmRK,SAAmC3E,EAAOQ,GAC/C,OAAO4D,EAAkBpE,EAAOQ,GAAW,KI/RhC6I,EAAgB,CAC3BC,QAAS,yBACTC,WAAW,EACXC,MAAO,QACPC,YAAY,EACZC,SAAU,CAAC,CAAEC,IAAK,UAClBC,MAN2B,WAOzB,MAAO,CAAC,MAAO,CAAEC,MAAO,qBAAuB,CAAC,QAAS,CAAEA,MAAO,WAAa,MAItEC,EAAoB,CAC/BR,QAAS,YACTC,WAAW,EACXC,MAAO,cACPC,YAAY,EACZC,SAAU,CAAC,CAAEC,IAAK,UAClBC,MAN+B,WAO7B,MAAO,CAAC,QAAS,KAIRG,EAAoB,CAC/BT,QAAS,aACTC,WAAW,EACXC,MAAO,cACPC,YAAY,EACZC,SAAU,CAAC,CAAEC,IAAK,UAClBC,MAN+B,WAO7B,MAAO,CAAC,QAAS,KAIRI,EAAmB,CAC9BV,QAAS,+BACTC,WAAW,EACXC,MAAO,cACPC,YAAY,EACZC,SAAU,CAAC,CAAEC,IAAK,OAClBC,MAN8B,WAO5B,MAAO,CAAC,KAAM,KAILK,EAAoB,CAC/BX,QAAS,UACTC,WAAW,EACXC,MAAO,cACPC,YAAY,EACZrH,MAAO,CACL8H,MAAO,CAAEC,QAAS,OAEpBT,SAAU,CACR,CACEC,IAAK,KACLS,SAFF,SAEWC,GACP,IAAMC,EAAYD,EAAIH,MAAMI,UAC5B,OAAOA,EAAY,CAAEJ,MAAO,eAAeI,GAAgB,QAIjEV,MAjB+B,SAiBzB7H,GACJ,MAAO,CAAC,KAAMA,EAAKK,MAAO,KAIjBmI,EAAsB,CACjCjB,QAAS,UACTC,WAAW,EACXC,MAAO,cACPC,YAAY,EACZrH,MAAO,CACL8H,MAAO,CAAEC,QAAS,OAEpBT,SAAU,CACR,CACEC,IAAK,KACLS,SAFF,SAEWC,GACP,IAAMC,EAAYD,EAAIH,MAAMI,UAC5B,OAAOA,EAAY,CAAEJ,MAAO,eAAeI,GAAgB,QAIjEV,MAjBiC,SAiB3B7H,GACJ,MAAO,CAAC,KAAMA,EAAKK,MAAO,KCxEf,SAASoI,IACtB,GAAM,yBAA0B9L,OAAOC,WAAvC,CAEA,IAAM8L,EAAkBpJ,EAAQ,GAAyByH,WAAW2B,gBAE9DC,EAAyB7F,IAE/B8F,iBAAOF,EAAgBnM,UAAW,SAAS,SAAUsH,GACnDA,EAAMmB,IACJ,QACA2D,EAAuB7D,UAAU,CAC/BxG,KAAM,QACNuK,KAAM,eACNC,QAASzE,IAAIC,WAAWC,MAAM,yDAC9BtG,MAAOX,KAAK+C,MAAMpC,QAEpB,OAIJ,IAAM8K,EAA4BzJ,EAAQ,GAAyB0J,YAAYC,SAASF,0BAExFH,iBAAOG,EAA0BxM,UAAW,cAAc,SAAUkB,GAClE,IAAMyL,EAAiB5L,KAAKE,OAC5BC,EAAMC,MAAQ,SAAeO,EAAO+B,GA8BlC,SAASmJ,EAAkBrD,GACzB,IAAMsD,EAAkB,GASxB,OARAtD,EAAI5F,SAAQ,SAACC,GACX,GAAIA,EAAK7B,OAAS4K,EAAezL,MAAMM,cAAgBoC,EAAK7B,OAAS4K,EAAezL,MAAMK,WAAY,CACpG,IAAMuL,EASZ,SAA4BlJ,GAK1B,OAJAlC,EAAMqL,MAAM,MACZrL,EAAMsL,aAAapJ,GACnBlC,EAAMqL,MAAM,KAKd,SAAuBnJ,GACrB,IAAMkJ,EAAYlJ,EAAKE,MAAM8H,MAC7B,IAAKkB,EACH,OAAO,KAIT,IAAMG,EAAQH,EAAUG,MAAM,sCAE9B,GAAIA,GAASA,EAAM,GACjB,OAAOA,EAAM,GAGf,OAAO,KAhBAC,CAActJ,GAdCuJ,CAAmBvJ,GACrCiJ,EAAgBhJ,KAAKiJ,OAGzBpL,EAAMqL,MAAM,KACZrL,EAAM0L,gBACCP,EA4BTpJ,EAAKE,SAAQ,SAAC0J,GACkB,eAA1BA,EAAYtL,KAAKpD,MApEvB,SAA4B8K,GAC1B,IAAI6D,EAAmB,GACvB7D,EAAK9F,SAAQ,SAAC4J,GACRA,EAAQxL,OAAS4K,EAAezL,MAAMI,YACxCgM,EAAmBV,EAAkBW,OAKzC,MAAwBD,EAAxB,wDAA0C,yFAA/BR,EAA+B,EACxCpL,EAAMqL,MAAM,KAEZrL,EAAMqL,MAAoB,SAAdD,GAAsC,WAAdA,EAAyB,IAAM,KACnEpL,EAAMqL,MAAM,OACZrL,EAAMqL,MAAoB,UAAdD,GAAuC,WAAdA,EAAyB,IAAM,KAEtEpL,EAAMqL,MAAM,KACZrL,EAAM0L,gBAmDsCI,CAAmBH,GACjC,eAA1BA,EAAYtL,KAAKpD,OAA0C0O,EAhD1D1J,SAAQ,SAAC8J,GACRA,EAAQ1L,OAAS4K,EAAezL,MAAMI,WACxCsL,EAAkBa,MAGtB/L,EAAM0L,oBA8CR1L,EAAM0L,gBACN1L,EAAMqL,MAAM,UAIhB,IAAMW,EAAwB3K,EAAQ,GAAyB0J,YAAYC,SAASgB,sBAEpFrB,iBAAOqB,EAAsB1N,UAAW,eAAe,SAAU2N,GAC/D,EAAcA,EAAQ,CACpBxM,MAAO,CACLyM,MAAO,SAGTC,MAAO,CACLD,MAAO,cAGTE,MAAO,CACLF,MAAO,cAGTG,GAAI,CACFH,MAAO,eACP9B,SAAU,SAACkC,GAAD,MAAU,CAClBpC,MAAOoC,EAAIC,QAAQ,YAIvBzL,GAAI,CACFoL,MAAO,aAGTM,GAAI,CACFN,MAAO,aACP9B,SAAU,SAACkC,GAAD,MAAU,CAClBpC,MAAOoC,EAAIC,QAAQ,iBAM3B5B,iBAAOqB,EAAsB1N,UAAW,kBAAkB,SAAUmO,GAClEA,EAAUC,OAAO,YAGnB,IAAMC,EAAgBtL,EAAQ,GAAyB0J,YAAYC,SAAS2B,cAE5EC,mBAASD,EAAcrO,UAAW,cAAc,SAAUuO,GAGxD,OAFcA,IAGXC,UAAU,QAAS,QAASzD,GAC5ByD,UAAU,QAAS,aAAchD,GACjCgD,UAAU,QAAS,aAAc/C,GACjC+C,UAAU,QAAS,YAAa9C,GAChC8C,UAAU,QAAS,aAAc7C,GACjC6C,UAAU,QAAS,eAAgBvC,MAGxC,IAAMwC,EAA0B1L,EAAQ,GAAyB0J,YAAYgC,wBAE7EpC,iBAAOoC,EAAwBzO,UAAW,oBAAoB,SAAUsH,GACtEA,EAAMmB,IAAI,cAAe1F,EAAQ,GAAyB2L,OAAOhE,GAAc,Q,iDC3KnFvM,EAAOD,QAAUkC,OAAOE,KAAKC,OAAO,oB,uFCKpCuH,IAAI6G,aAAalG,IAAI,8BAA8B,WACjD4D,iBAAOuC,IAAK5O,UAAW,YAAY,WACjC,SAAS6O,EAAqB1N,GAC5B,IAAI2N,EAAS,GACb,EAAe3N,EAAM4N,qBAAqB,MAA1C,wDAAiD,yFAAxChB,EAAwC,EAC/Ce,EAAOjL,KAAKkK,EAAGiB,aAEjB,MAAe7N,EAAM4N,qBAAqB,MAA1C,wDAAiD,yFAC3C3Q,GAAK,EACT,EAF+C,EAE7B2Q,qBAAqB,MAAvC,wDAA8C,uFACzCE,aAAa,aAAcH,IAAS1Q,IAAM,MAInD,MAAkB8Q,SAASH,qBAAqB,SAAhD,wDAA0D,qFACxDF,EADwD,OAK5D3C","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = flarum.extensions['askvortsov-rich-text'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['common/utils/Stream'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/components/Separator'];","module.exports = flarum.core.compat['common/components/Switch'];","module.exports = flarum.core.compat['common/helpers/listItems'];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","function tableNodes(schema) {\n  return [\n    schema.nodes.table,\n    schema.nodes.table_head,\n    schema.nodes.table_body,\n    schema.nodes.table_row,\n    schema.nodes.table_cell,\n    schema.nodes.table_header,\n  ];\n}\n\nexport function inTable(state) {\n  return tableNodes(state.schema).includes(state.selection.$head.parent.type);\n}\n\nfunction inTableHead(state) {\n  return state.selection.$head.parent.type === state.schema.nodes.table_header;\n}\n\nexport function moveSelectionAfterTableCommand(state, dispatch) {\n  return exitTableCommand(state, dispatch, false);\n}\n\nexport function moveSelectionBeforeTableCommand(state, dispatch) {\n  return exitTableCommand(state, dispatch, true);\n}\n\nfunction exitTableCommand(state, dispatch, before = false) {\n  // TODO: Cleanup\n  const schema = state.schema;\n\n  if (!inTable(state)) {\n    return false;\n  }\n\n  if (dispatch) {\n    // our hierarchy is table > table_head | table_body > table_row > table_cell\n    // and we're relying on that to be always true.\n    // That's why .after(-3) selects the parent _table_ node from a table_cell node\n    const type = schema.nodes.paragraph;\n    const newPosition = before ? state.selection.$head.before(-3) - 1 : state.selection.$head.after(-3) + 1;\n    const tr = state.tr;\n\n    // if the position before/after the table doesn't exist, let's insert a paragraph there\n    try {\n      tr.doc.resolve(newPosition);\n    } catch (e) {\n      const insertionPosition = before ? newPosition + 1 : newPosition - 1;\n      tr.insert(insertionPosition, type.create());\n    }\n\n    tr.setSelection(require('@askvortsov-rich-text').Selection.near(tr.doc.resolve(Math.max(0, newPosition)), 1));\n    dispatch(tr.scrollIntoView());\n  }\n  return true;\n}\n\nexport function insertTableRowBeforeCommand(state, dispatch) {\n  return insertTableRowCommand(true, state, dispatch);\n}\n\nexport function insertTableRowAfterCommand(state, dispatch) {\n  return insertTableRowCommand(false, state, dispatch);\n}\n\nfunction insertTableRowCommand(before, state, dispatch) {\n  // TODO: Cleanup\n  const schema = state.schema;\n\n  if (!inTable(state) || inTableHead(state)) {\n    return false;\n  }\n\n  if (dispatch) {\n    const { $head } = state.selection;\n    const tableRowNode = $head.node(-1);\n\n    const newTableCells = [];\n    tableRowNode.forEach((cell) => {\n      newTableCells.push(schema.nodes.table_cell.create(cell.attrs));\n    });\n    const newTableRow = schema.nodes.table_row.create(null, newTableCells);\n    const positionToInsert = before ? $head.before(-1) : $head.after(-1);\n    const tr = state.tr.insert(positionToInsert, newTableRow);\n\n    dispatch(tr.scrollIntoView());\n  }\n\n  return true;\n}\n\nexport function insertTableColumnAfterCommand(state, dispatch) {\n  return insertTableColumnCommand(false, state, dispatch);\n}\n\nexport function insertTableColumnBeforeCommand(state, dispatch) {\n  return insertTableColumnCommand(true, state, dispatch);\n}\n\n/**\n *  Insert a new table column in this table\n * 1. find the index of the selected table cell in the current table row\n * 2. walk through the entire document to traverse all rows in our selected table\n * 3. for each table row, find the table cell at the desired index and get its position\n * 4. insert a new table_cell or table_header node before/after the found position\n */\nfunction insertTableColumnCommand(before, state, dispatch) {\n  // TODO: Cleanup\n  const schema = state.schema;\n\n  if (!inTable(state)) {\n    return false;\n  }\n  if (dispatch) {\n    const $head = state.selection.$head;\n    const selectedTable = $head.node(-3);\n    const selectedCellIndex = $head.index(-1);\n\n    // find and store all positions where we need to insert new cells\n    const newCells = [];\n    const tableOffset = $head.start(-3);\n    let targetCell;\n    // traverse the current table to find the absolute positions of our cells to be inserted\n    selectedTable.descendants((node, pos) => {\n      if (!tableNodes(schema).includes(node.type)) {\n        return false; // don't descend into non-table nodes\n      }\n\n      if (node.type === schema.nodes.table_row) {\n        targetCell = node.child(selectedCellIndex);\n      }\n\n      if (targetCell && node == targetCell) {\n        const position = before ? selectedTable.resolve(pos + 1).before() : selectedTable.resolve(pos + 1).after();\n        // position is relative to the start of the table, so we need\n        // to add the table offset (distance to start of document)\n        newCells.push([node.type, tableOffset + position]);\n      }\n    });\n\n    // insert new cells from bottom to top (reverse order)\n    // to avoid inserted cells making our found positions obsolete\n    let tr = state.tr;\n    for (const newCell of newCells.reverse()) {\n      tr = tr.insert(newCell[1], newCell[0].create());\n    }\n\n    dispatch(tr.scrollIntoView());\n  }\n  return true;\n}\n\nexport function removeRowCommand(state, dispatch) {\n  if (!inTable(state) || inTableHead(state)) {\n    return false;\n  }\n\n  if (dispatch) {\n    const tr = state.tr;\n    const $head = state.selection.$head;\n\n    // delete entire table if we're deleting the last row in the table body\n    if ($head.node(-2).childCount === 1) {\n      return removeTableCommand(state, dispatch);\n    }\n    // delete from start to end of this row (node at -1 position from the table cell)\n    tr.delete($head.start(-1) - 1, $head.end(-1) + 1);\n    dispatch(tr.scrollIntoView());\n  }\n\n  return true;\n}\n\nexport function removeColumnCommand(state, dispatch) {\n  // TODO: Cleanup\n  const schema = state.schema;\n\n  if (!inTable(state)) {\n    return false;\n  }\n\n  if (dispatch) {\n    const $head = state.selection.$head;\n    const table = $head.node(-3);\n\n    // remove entire table if this is the last remaining column\n    if ($head.node(-1).childCount === 1) {\n      return removeTableCommand(state, dispatch);\n    }\n\n    const cellIndex = $head.index(-1);\n    let targetCell;\n    const resolvedPositions = [];\n    const tableOffset = $head.start(-3);\n    table.descendants((node, pos) => {\n      if (!tableNodes(schema).includes(node.type)) {\n        return false; // don't descend into non-table nodes\n      }\n\n      if (node.type === schema.nodes.table_row) {\n        targetCell = node.childCount >= cellIndex + 1 ? node.child(cellIndex) : null;\n      }\n\n      if (targetCell && node == targetCell) {\n        resolvedPositions.push(table.resolve(pos + 1));\n      }\n    });\n\n    let tr = state.tr;\n    for (const cellPosition of resolvedPositions.reverse()) {\n      tr = tr.delete(tableOffset + cellPosition.start() - 1, tableOffset + cellPosition.end() + 1);\n    }\n\n    dispatch(tr.scrollIntoView());\n  }\n\n  return true;\n}\n\nexport function removeTableContentCommand(state, dispatch) {\n  if (!inTable(state)) {\n    return false;\n  }\n\n  const { $from, $to } = state.selection;\n\n  // selection includes entire table\n  if ($from.start(-3) >= $from.pos - 3 && $from.end(-3) <= $to.pos + 3) {\n    return removeTableCommand(state, dispatch);\n  }\n\n  // selection includes entire row\n  if ($from.start(-1) >= $from.pos - 1 && $from.end(-1) <= $to.pos + 1) {\n    return removeRowCommand(state, dispatch);\n  }\n\n  // selection contains two arbitrary cells?\n  // prevent delete operation to prevent deleting the cell nodes\n  // themselves and breaking the table structure\n  if (!$from.sameParent($to)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction moveToCellCommand(state, dispatch, direction) {\n  if (direction !== -1 && direction !== 1) {\n    return false;\n  }\n\n  if (!inTable(state)) return false;\n\n  const $head = state.selection.$head;\n\n  for (let level = -1; level > -4; level--) {\n    const parentIndex = $head.index(level);\n    const parent = $head.node(level);\n\n    if (!parent) continue;\n\n    // every time we want to skip the boundaries of a node (a cell, a row, ...)\n    // we have to consider the node's opening and closing positions, too. For\n    // each level, this will add an additional offset of 2 that we need to skip\n    const nodeOffset = 2;\n\n    const target = parent.maybeChild(parentIndex + direction);\n\n    if (!target) continue;\n\n    const newPos = direction === -1 ? $head.start() - nodeOffset * (level * -1) : $head.end() + nodeOffset * (level * -1);\n\n    dispatch(state.tr.setSelection(require('@askvortsov-rich-text').Selection.near(state.tr.doc.resolve(newPos), 1)).scrollIntoView());\n\n    return true;\n  }\n\n  // we're at the end of the table and still want to move forward?\n  // let's move the cursor below the table!\n  if (direction === 1) {\n    return moveSelectionAfterTableCommand(state, dispatch);\n  } else {\n    return moveSelectionBeforeTableCommand(state, dispatch);\n  }\n}\n\nexport function moveToPreviousCellCommand(state, dispatch) {\n  return moveToCellCommand(state, dispatch, -1);\n}\n\nexport function moveToNextCellCommand(state, dispatch) {\n  return moveToCellCommand(state, dispatch, +1);\n}\n\nfunction removeTableCommand(state, dispatch) {\n  const $head = state.selection.$head;\n  if (dispatch) {\n    dispatch(state.tr.deleteRange($head.start(-3) - 1, $head.end(-3) + 1));\n  }\n\n  return true;\n}\n\nexport function insertTableCommand(numRows = 4, numCols = 3, labelCells = true) {\n  return (state, dispatch) => {\n    // TODO: Clean this up\n    const schema = state.schema;\n\n    // TODO: Reenable this\n    // if (!setBlockType(schema.nodes.table)(state)) {\n    //     return false;\n    // }\n\n    if (!dispatch) return true;\n\n    let headerIndex = 1;\n    let cellIndex = 1;\n    const cell = () => schema.nodes.table_cell.create(null, schema.text(labelCells ? `cell ${cellIndex++}` : ' '));\n    const header = () => schema.nodes.table_header.create(null, schema.text(labelCells ? `header ${headerIndex++}` : ' '));\n    const row = (...cells) => schema.nodes.table_row.create(null, cells);\n    const head = (row) => schema.nodes.table_head.create(null, row);\n    const body = (...rows) => schema.nodes.table_body.create(null, rows);\n    const table = (head, body) => schema.nodes.table.createChecked(null, [head, body]);\n    const paragraph = () => schema.nodes.paragraph.create(null);\n\n    // !MODIFIED\n    const t = table(\n      head(row(...Array(numCols).fill(0).map(header))),\n      body(\n        ...Array(numRows - 1)\n          .fill(0)\n          .map((_) => {\n            return row(...Array(numCols).fill(0).map(cell));\n          })\n      )\n    );\n    // !MODIFIED\n\n    let tr = state.tr.replaceSelectionWith(t);\n    dispatch(tr.scrollIntoView());\n\n    // if there's no selectable node after the inserted table, insert an empty paragraph\n    // because it makes selecting, navigating much more intuitive\n    const newState = state.apply(tr);\n    const nodeAfterTable = newState.doc.nodeAt(newState.tr.selection.to - 1);\n    if (nodeAfterTable && nodeAfterTable.type === schema.nodes.text) {\n      tr = newState.tr.insert(newState.tr.selection.to, paragraph());\n      dispatch(tr.scrollIntoView());\n    }\n\n    return true;\n  };\n}\n","import Button from 'flarum/common/components/Button';\nimport Separator from 'flarum/common/components/Separator';\nimport Switch from 'flarum/common/components/Switch';\nimport listItems from 'flarum/common/helpers/listItems';\nimport extractText from 'flarum/common/utils/extractText';\nimport Stream from 'flarum/common/utils/Stream';\nimport {\n  insertTableColumnAfterCommand,\n  insertTableColumnBeforeCommand,\n  insertTableCommand,\n  insertTableRowBeforeCommand,\n  insertTableRowAfterCommand,\n  inTable,\n  removeColumnCommand,\n  removeRowCommand,\n} from '../proseMirror/commands';\n\nexport default function TableDropdown() {\n  const FormDropdown = require('@askvortsov-rich-text').components.FormDropdown;\n  class TableDropdown extends FormDropdown {\n    oninit(vnode) {\n      super.oninit(vnode);\n\n      this.state = this.attrs.state;\n      this.state.addItem(\n        this.attrs.type,\n        (state, dispatch) => {\n          return this.command(state, dispatch);\n        },\n        this.onEditorUpdate.bind(this)\n      );\n\n      this.numCols = Stream(3);\n      this.numRows = Stream(4);\n      this.labelCells = Stream(true);\n    }\n\n    getMenu(items) {\n      if (!this.inTable()) {\n        return super.getMenu(items);\n      }\n\n      const commandsToButtons = (commands) => {\n        return commands.map((command) => (\n          <Button onclick={this.click.bind(this, command.command)} onkeydown={this.keydown.bind(this, command.command)}>\n            {app.translator.trans(`askvortsov-markdown-tables.lib.composer.table_menu.${command.translation}`)}\n          </Button>\n        ));\n      };\n\n      const colCommands = [\n        {\n          translation: 'remove_column',\n          command: removeColumnCommand,\n        },\n        {\n          translation: 'insert_column_before',\n          command: insertTableColumnBeforeCommand,\n        },\n        {\n          translation: 'insert_column_after',\n          command: insertTableColumnAfterCommand,\n        },\n      ];\n\n      const rowCommands = [\n        {\n          translation: 'remove_row',\n          command: removeRowCommand,\n        },\n        {\n          translation: 'insert_row_before',\n          command: insertTableRowBeforeCommand,\n        },\n        {\n          translation: 'insert_row_after',\n          command: insertTableRowAfterCommand,\n        },\n      ];\n\n      return (\n        <ul className={'Dropdown-menu dropdown-menu TableDropdownMenu'}>\n          {listItems([...commandsToButtons(colCommands), Separator.component(), ...commandsToButtons(rowCommands)])}\n        </ul>\n      );\n    }\n\n    fields() {\n      const items = super.fields();\n\n      items.add(\n        'numCols',\n        <div className=\"Form-group\">\n          <label>{app.translator.trans('askvortsov-markdown-tables.lib.composer.table_menu.num_cols')}</label>\n          <input\n            className=\"FormControl\"\n            name=\"numCols\"\n            type=\"number\"\n            placeholder={extractText(app.translator.trans('askvortsov-markdown-tables.lib.composer.table_menu.num_cols'))}\n            bidi={this.numCols}\n            required\n          />\n        </div>,\n        10\n      );\n\n      items.add(\n        'numRows',\n        <div className=\"Form-group\">\n          <label>{app.translator.trans('askvortsov-markdown-tables.lib.composer.table_menu.num_rows')}</label>\n          <input\n            className=\"FormControl\"\n            name=\"numRows\"\n            type=\"number\"\n            placeholder={extractText(app.translator.trans('askvortsov-markdown-tables.lib.composer.table_menu.num_rows'))}\n            bidi={this.numRows}\n            required\n          />\n        </div>,\n        10\n      );\n\n      items.add(\n        'labelCells',\n\n        <div className=\"Form-group\">\n          {Switch.component(\n            {\n              state: this.labelCells(),\n              onchange: this.labelCells,\n            },\n            app.translator.trans('askvortsov-markdown-tables.lib.composer.table_menu.label_cells')\n          )}\n        </div>,\n        9\n      );\n\n      return items;\n    }\n\n    inTable() {\n      return inTable(this.attrs.state.editorView.state);\n    }\n\n    onEditorUpdate() {\n      this.currInTable = this.inTable();\n    }\n\n    keydown(command, e) {\n      if (e.key === ' ' || e.key === 'Enter') {\n        this.click(command, e);\n      }\n    }\n\n    click(command, e) {\n      e.preventDefault();\n      this.command = command;\n      return this.state.run(this.attrs.type);\n    }\n\n    insert() {\n      if (!this.inTable()) {\n        this.command = insertTableCommand(parseInt(this.numRows()), parseInt(this.numCols()), this.labelCells());\n        this.state.run(this.attrs.type);\n      }\n    }\n\n    onEditorUpdate() {\n      this.active = !!this.inTable();\n      this.$('.Dropdown-toggle').toggleClass('active', this.active);\n    }\n  }\n\n  return TableDropdown;\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import { moveSelectionAfterTableCommand, moveToNextCellCommand, moveToPreviousCellCommand, removeTableContentCommand } from './commands';\n\nexport const tableKeymap = {\n  'Mod-Enter': moveSelectionAfterTableCommand,\n  'Shift-Enter': moveSelectionAfterTableCommand,\n  Enter: moveToNextCellCommand,\n  Backspace: removeTableContentCommand,\n  Delete: removeTableContentCommand,\n  'Mod-Backspace': removeTableContentCommand,\n  'Mod-Delete': removeTableContentCommand,\n  Tab: moveToNextCellCommand,\n  'Shift-Tab': moveToPreviousCellCommand,\n};\n","export const tableNodeSpec = {\n  content: 'table_head table_body*',\n  isolating: true,\n  group: 'block',\n  selectable: false,\n  parseDOM: [{ tag: 'table' }],\n  toDOM() {\n    return ['div', { class: 's-table-container' }, ['table', { class: 's-table' }, 0]];\n  },\n};\n\nexport const tableHeadNodeSpec = {\n  content: 'table_row',\n  isolating: true,\n  group: 'table_block',\n  selectable: false,\n  parseDOM: [{ tag: 'thead' }],\n  toDOM() {\n    return ['thead', 0];\n  },\n};\n\nexport const tableBodyNodeSpec = {\n  content: 'table_row+',\n  isolating: true,\n  group: 'table_block',\n  selectable: false,\n  parseDOM: [{ tag: 'tbody' }],\n  toDOM() {\n    return ['tbody', 0];\n  },\n};\n\nexport const tableRowNodeSpec = {\n  content: '(table_cell | table_header)+',\n  isolating: true,\n  group: 'table_block',\n  selectable: false,\n  parseDOM: [{ tag: 'tr' }],\n  toDOM() {\n    return ['tr', 0];\n  },\n};\n\nexport const tableCellNodeSpec = {\n  content: 'inline*',\n  isolating: true,\n  group: 'table_block',\n  selectable: false,\n  attrs: {\n    style: { default: null },\n  },\n  parseDOM: [\n    {\n      tag: 'td',\n      getAttrs(dom) {\n        const textAlign = dom.style.textAlign;\n        return textAlign ? { style: `text-align: ${textAlign}` } : null;\n      },\n    },\n  ],\n  toDOM(node) {\n    return ['td', node.attrs, 0];\n  },\n};\n\nexport const tableHeaderNodeSpec = {\n  content: 'inline*',\n  isolating: true,\n  group: 'table_block',\n  selectable: false,\n  attrs: {\n    style: { default: null },\n  },\n  parseDOM: [\n    {\n      tag: 'th',\n      getAttrs(dom) {\n        const textAlign = dom.style.textAlign;\n        return textAlign ? { style: `text-align: ${textAlign}` } : null;\n      },\n    },\n  ],\n  toDOM(node) {\n    return ['th', node.attrs, 0];\n  },\n};\n","import { extend, override } from 'flarum/extend';\nimport TableDropdown from './components/TableDropdown';\nimport { tableKeymap } from './proseMirror/tableKeymap';\nimport {\n  tableBodyNodeSpec,\n  tableCellNodeSpec,\n  tableHeaderNodeSpec,\n  tableHeadNodeSpec,\n  tableNodeSpec,\n  tableRowNodeSpec,\n} from './proseMirror/tableSchema';\n\nexport default function configureRichText() {\n  if (!('askvortsov-rich-text' in flarum.extensions)) return;\n\n  const ProseMirrorMenu = require('@askvortsov-rich-text').components.ProseMirrorMenu;\n\n  const TableDropdownComponent = TableDropdown();\n\n  extend(ProseMirrorMenu.prototype, 'items', function (items) {\n    items.add(\n      'table',\n      TableDropdownComponent.component({\n        type: 'table',\n        icon: 'fas fa-table',\n        tooltip: app.translator.trans('askvortsov-markdown-tables.lib.composer.table_tooltip'),\n        state: this.attrs.state,\n      }),\n      10\n    );\n  });\n\n  const MarkdownSerializerBuilder = require('@askvortsov-rich-text').proseMirror.markdown.MarkdownSerializerBuilder;\n\n  extend(MarkdownSerializerBuilder.prototype, 'buildNodes', function (nodes) {\n    const richTextSchema = this.schema;\n    nodes.table = function table(state, node) {\n      function serializeTableHead(head) {\n        let columnAlignments = [];\n        head.forEach((headRow) => {\n          if (headRow.type === richTextSchema.nodes.table_row) {\n            columnAlignments = serializeTableRow(headRow);\n          }\n        });\n\n        // write table header separator\n        for (const alignment of columnAlignments) {\n          state.write('|');\n\n          state.write(alignment === 'left' || alignment === 'center' ? ':' : ' ');\n          state.write('---');\n          state.write(alignment === 'right' || alignment === 'center' ? ':' : ' ');\n        }\n        state.write('|');\n        state.ensureNewLine();\n      }\n\n      function serializeTableBody(body) {\n        body.forEach((bodyRow) => {\n          if (bodyRow.type === richTextSchema.nodes.table_row) {\n            serializeTableRow(bodyRow);\n          }\n        });\n        state.ensureNewLine();\n      }\n\n      function serializeTableRow(row) {\n        const columnAlignment = [];\n        row.forEach((cell) => {\n          if (cell.type === richTextSchema.nodes.table_header || cell.type === richTextSchema.nodes.table_cell) {\n            const alignment = serializeTableCell(cell);\n            columnAlignment.push(alignment);\n          }\n        });\n        state.write('|');\n        state.ensureNewLine();\n        return columnAlignment;\n      }\n\n      function serializeTableCell(cell) {\n        state.write('| ');\n        state.renderInline(cell);\n        state.write(' ');\n\n        return findAlignment(cell);\n      }\n\n      function findAlignment(cell) {\n        const alignment = cell.attrs.style;\n        if (!alignment) {\n          return null;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n        const match = alignment.match(/text-align:[ ]?(left|right|center)/);\n\n        if (match && match[1]) {\n          return match[1];\n        }\n\n        return null;\n      }\n\n      // TODO: don't rely on node names\n      node.forEach((table_child) => {\n        if (table_child.type.name === 'table_head') serializeTableHead(table_child);\n        if (table_child.type.name === 'table_body') serializeTableBody(table_child);\n      });\n\n      state.ensureNewLine();\n      state.write('\\n');\n    };\n  });\n\n  const MarkdownParserBuilder = require('@askvortsov-rich-text').proseMirror.markdown.MarkdownParserBuilder;\n\n  extend(MarkdownParserBuilder.prototype, 'buildTokens', function (tokens) {\n    Object.assign(tokens, {\n      table: {\n        block: 'table',\n      },\n\n      thead: {\n        block: 'table_head',\n      },\n\n      tbody: {\n        block: 'table_body',\n      },\n\n      th: {\n        block: 'table_header',\n        getAttrs: (tok) => ({\n          style: tok.attrGet('style'),\n        }),\n      },\n\n      tr: {\n        block: 'table_row',\n      },\n\n      td: {\n        block: 'table_cell',\n        getAttrs: (tok) => ({\n          style: tok.attrGet('style'),\n        }),\n      },\n    });\n  });\n\n  extend(MarkdownParserBuilder.prototype, 'buildTokenizer', function (tokenizer) {\n    tokenizer.enable('table');\n  });\n\n  const SchemaBuilder = require('@askvortsov-rich-text').proseMirror.markdown.SchemaBuilder;\n\n  override(SchemaBuilder.prototype, 'buildNodes', function (original) {\n    const nodes = original();\n\n    return nodes\n      .addBefore('image', 'table', tableNodeSpec)\n      .addBefore('image', 'table_head', tableHeadNodeSpec)\n      .addBefore('image', 'table_body', tableBodyNodeSpec)\n      .addBefore('image', 'table_row', tableRowNodeSpec)\n      .addBefore('image', 'table_cell', tableCellNodeSpec)\n      .addBefore('image', 'table_header', tableHeaderNodeSpec);\n  });\n\n  const ProseMirrorEditorDriver = require('@askvortsov-rich-text').proseMirror.ProseMirrorEditorDriver;\n\n  extend(ProseMirrorEditorDriver.prototype, 'buildPluginItems', function (items) {\n    items.add('tableKeymap', require('@askvortsov-rich-text').keymap(tableKeymap), 10);\n  });\n}\n","module.exports = flarum.core.compat['components/Post'];","import app from 'flarum/app';\nimport { extend } from 'flarum/extend';\nimport Post from 'flarum/components/Post';\nimport configureRichText from '../common/configureRichText';\n\napp.initializers.add('askvortsov-markdown-tables', () => {\n  extend(Post.prototype, 'oncreate', function () {\n    function addDataLabelsToTable(table) {\n      let labels = [];\n      for (let th of table.getElementsByTagName('th')) {\n        labels.push(th.textContent);\n      }\n      for (let tr of table.getElementsByTagName('tr')) {\n        let i = -1;\n        for (let td of tr.getElementsByTagName('td')) {\n          td.setAttribute('data-label', labels[++i] || '');\n        }\n      }\n    }\n    for (let table of document.getElementsByTagName('table')) {\n      addDataLabelsToTable(table);\n    }\n  });\n\n  configureRichText();\n});\n"],"sourceRoot":""}