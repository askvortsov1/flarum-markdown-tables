{"version":3,"sources":["webpack://@askvortsov/pipetables/webpack/bootstrap","webpack://@askvortsov/pipetables/external \"flarum.extensions['askvortsov-rich-text']\"","webpack://@askvortsov/pipetables/external \"flarum.core.compat['extend']\"","webpack://@askvortsov/pipetables/external \"flarum.core.compat['common/utils/Stream']\"","webpack://@askvortsov/pipetables/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@askvortsov/pipetables/external \"flarum.core.compat['app']\"","webpack://@askvortsov/pipetables/external \"flarum.core.compat['components/Post']\"","webpack://@askvortsov/pipetables/external \"flarum.core.compat['common/components/Button']\"","webpack://@askvortsov/pipetables/external \"flarum.core.compat['common/components/Switch']\"","webpack://@askvortsov/pipetables/external \"flarum.core.compat['common/helpers/listItems']\"","webpack://@askvortsov/pipetables/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@askvortsov/pipetables/./src/forum/proseMirror/commands.js","webpack://@askvortsov/pipetables/./src/forum/components/TableDropdown.js","webpack://@askvortsov/pipetables/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@askvortsov/pipetables/./src/forum/proseMirror/tableKeymap.js","webpack://@askvortsov/pipetables/./src/forum/proseMirror/tableSchema.js","webpack://@askvortsov/pipetables/./src/forum/configureRichText.js","webpack://@askvortsov/pipetables/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","extensions","core","compat","_extends","assign","target","arguments","length","source","apply","this","tableNodes","schema","nodes","table","table_head","table_body","table_row","table_cell","table_header","inTable","state","includes","selection","$head","parent","type","inTableHead","moveSelectionAfterTableCommand","dispatch","exitTableCommand","before","paragraph","newPosition","after","tr","doc","resolve","e","insertionPosition","insert","setSelection","require","Selection","near","Math","max","scrollIntoView","insertTableRowBeforeCommand","insertTableRowCommand","insertTableRowAfterCommand","tableRowNode","node","newTableCells","forEach","cell","push","attrs","newTableRow","positionToInsert","insertTableColumnAfterCommand","insertTableColumnCommand","insertTableColumnBeforeCommand","targetCell","selectedTable","selectedCellIndex","index","newCells","tableOffset","start","descendants","pos","child","position","_iterator","reverse","_isArray","Array","isArray","_i","iterator","_ref","next","done","newCell","removeRowCommand","childCount","removeTableCommand","delete","end","removeColumnCommand","cellIndex","resolvedPositions","_iterator2","_isArray2","_i2","_ref2","cellPosition","removeTableContentCommand","_state$selection","$from","$to","sameParent","moveToCellCommand","direction","level","parentIndex","maybeChild","newPos","moveSelectionBeforeTableCommand","moveToNextCellCommand","deleteRange","TableDropdown","subClass","superClass","constructor","__proto__","oninit","vnode","_this","_FormDropdown","addItem","command","onEditorUpdate","numCols","Stream","numRows","labelCells","getMenu","items","_this2","commands","translation","className","listItems","map","Button_default","a","onclick","click","onkeydown","keydown","app","translator","trans","fields","add","placeholder","extractText","bidi","required","Switch","component","onchange","editorView","currInTable","preventDefault","run","parseInt","headerIndex","text","row","_len","cells","_key","head","body","createChecked","fill","_len2","rows","_key2","_","replaceSelectionWith","newState","nodeAfterTable","nodeAt","to","components","FormDropdown","tableKeymap","Mod-Enter","Shift-Enter","Enter","Backspace","Delete","Mod-Backspace","Mod-Delete","Tab","Shift-Tab","tableNodeSpec","content","isolating","group","selectable","parseDOM","tag","toDOM","class","tableHeadNodeSpec","tableBodyNodeSpec","tableRowNodeSpec","tableCellNodeSpec","style","default","getAttrs","dom","textAlign","tableHeaderNodeSpec","configureRichText","ProseMirrorMenu","extend","icon","tooltip","MarkdownSerializerBuilder","proseMirror","markdown","richTextSchema","serializeTableRow","columnAlignment","alignment","write","renderInline","match","findAlignment","serializeTableCell","ensureNewLine","table_child","columnAlignments","headRow","serializeTableHead","bodyRow","MarkdownParserBuilder","tokens","block","thead","tbody","th","tok","attrGet","td","tokenizer","enable","SchemaBuilder","override","original","addBefore","ProseMirrorEditorDriver","keymap","initializers","Post","addDataLabelsToTable","labels","getElementsByTagName","textContent","_iterator3","_isArray3","_i3","_ref3","setAttribute","_iterator4","document","_isArray4","_i4","_ref4"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = flarum.extensions['askvortsov-rich-text'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['common/utils/Stream'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Post'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/components/Switch'];","module.exports = flarum.core.compat['common/helpers/listItems'];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","function tableNodes(schema) {\n    return [\n        schema.nodes.table,\n        schema.nodes.table_head,\n        schema.nodes.table_body,\n        schema.nodes.table_row,\n        schema.nodes.table_cell,\n        schema.nodes.table_header,\n    ];\n}\n\nexport function inTable(state) {\n    return tableNodes(state.schema).includes(state.selection.$head.parent.type);\n}\n\nfunction inTableHead(state) {\n    return state.selection.$head.parent.type === state.schema.nodes.table_header;\n}\n\nexport function moveSelectionAfterTableCommand(\n    state,\n    dispatch\n) {\n    return exitTableCommand(state, dispatch, false);\n}\n\nexport function moveSelectionBeforeTableCommand(\n    state,\n    dispatch\n) {\n    return exitTableCommand(state, dispatch, true);\n}\n\nfunction exitTableCommand(\n    state,\n    dispatch,\n    before = false\n) {\n    // TODO: Cleanup\n    const schema = state.schema;\n\n    if (!inTable(state)) {\n        return false;\n    }\n\n    if (dispatch) {\n        // our hierarchy is table > table_head | table_body > table_row > table_cell\n        // and we're relying on that to be always true.\n        // That's why .after(-3) selects the parent _table_ node from a table_cell node\n        const type = schema.nodes.paragraph;\n        const newPosition = before\n            ? state.selection.$head.before(-3) - 1\n            : state.selection.$head.after(-3) + 1;\n        const tr = state.tr;\n\n        // if the position before/after the table doesn't exist, let's insert a paragraph there\n        try {\n            tr.doc.resolve(newPosition);\n        } catch (e) {\n            const insertionPosition = before\n                ? newPosition + 1\n                : newPosition - 1;\n            tr.insert(insertionPosition, type.create());\n        }\n\n        tr.setSelection(\n            require('@askvortsov-rich-text').Selection.near(tr.doc.resolve(Math.max(0, newPosition)), 1)\n        );\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n}\n\nexport function insertTableRowBeforeCommand(\n    state,\n    dispatch\n) {\n    return insertTableRowCommand(true, state, dispatch);\n}\n\nexport function insertTableRowAfterCommand(\n    state,\n    dispatch\n) {\n    return insertTableRowCommand(false, state, dispatch);\n}\n\nfunction insertTableRowCommand(\n    before,\n    state,\n    dispatch\n) {\n    // TODO: Cleanup\n    const schema = state.schema;\n\n    if (!inTable(state) || inTableHead(state)) {\n        return false;\n    }\n\n    if (dispatch) {\n        const { $head } = state.selection;\n        const tableRowNode = $head.node(-1);\n\n        const newTableCells = [];\n        tableRowNode.forEach((cell) => {\n            newTableCells.push(schema.nodes.table_cell.create(cell.attrs));\n        });\n        const newTableRow = schema.nodes.table_row.create(null, newTableCells);\n        const positionToInsert = before ? $head.before(-1) : $head.after(-1);\n        const tr = state.tr.insert(positionToInsert, newTableRow);\n\n        dispatch(tr.scrollIntoView());\n    }\n\n    return true;\n}\n\nexport function insertTableColumnAfterCommand(\n    state,\n    dispatch\n) {\n    return insertTableColumnCommand(false, state, dispatch);\n}\n\nexport function insertTableColumnBeforeCommand(\n    state,\n    dispatch\n) {\n    return insertTableColumnCommand(true, state, dispatch);\n}\n\n/**\n *  Insert a new table column in this table\n * 1. find the index of the selected table cell in the current table row\n * 2. walk through the entire document to traverse all rows in our selected table\n * 3. for each table row, find the table cell at the desired index and get its position\n * 4. insert a new table_cell or table_header node before/after the found position\n */\nfunction insertTableColumnCommand(\n    before,\n    state,\n    dispatch\n) {\n    // TODO: Cleanup\n    const schema = state.schema;\n\n    if (!inTable(state)) {\n        return false;\n    }\n    if (dispatch) {\n        const $head = state.selection.$head;\n        const selectedTable = $head.node(-3);\n        const selectedCellIndex = $head.index(-1);\n\n        // find and store all positions where we need to insert new cells\n        const newCells = [];\n        const tableOffset = $head.start(-3);\n        let targetCell;\n        // traverse the current table to find the absolute positions of our cells to be inserted\n        selectedTable.descendants((node, pos) => {\n            if (!tableNodes(schema).includes(node.type)) {\n                return false; // don't descend into non-table nodes\n            }\n\n            if (node.type === schema.nodes.table_row) {\n                targetCell = node.child(selectedCellIndex);\n            }\n\n            if (targetCell && node == targetCell) {\n                const position = before\n                    ? selectedTable.resolve(pos + 1).before()\n                    : selectedTable.resolve(pos + 1).after();\n                // position is relative to the start of the table, so we need\n                // to add the table offset (distance to start of document)\n                newCells.push([node.type, tableOffset + position]);\n            }\n        });\n\n        // insert new cells from bottom to top (reverse order)\n        // to avoid inserted cells making our found positions obsolete\n        let tr = state.tr;\n        for (const newCell of newCells.reverse()) {\n            tr = tr.insert(newCell[1], newCell[0].create());\n        }\n\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n}\n\nexport function removeRowCommand(\n    state,\n    dispatch\n) {\n    if (!inTable(state) || inTableHead(state)) {\n        return false;\n    }\n\n    if (dispatch) {\n        const tr = state.tr;\n        const $head = state.selection.$head;\n\n        // delete entire table if we're deleting the last row in the table body\n        if ($head.node(-2).childCount === 1) {\n            return removeTableCommand(state, dispatch);\n        }\n        // delete from start to end of this row (node at -1 position from the table cell)\n        tr.delete($head.start(-1) - 1, $head.end(-1) + 1);\n        dispatch(tr.scrollIntoView());\n    }\n\n    return true;\n}\n\nexport function removeColumnCommand(\n    state,\n    dispatch\n) {\n    // TODO: Cleanup\n    const schema = state.schema;\n\n    if (!inTable(state)) {\n        return false;\n    }\n\n    if (dispatch) {\n        const $head = state.selection.$head;\n        const table = $head.node(-3);\n\n        // remove entire table if this is the last remaining column\n        if ($head.node(-1).childCount === 1) {\n            return removeTableCommand(state, dispatch);\n        }\n\n        const cellIndex = $head.index(-1);\n        let targetCell;\n        const resolvedPositions = [];\n        const tableOffset = $head.start(-3);\n        table.descendants((node, pos) => {\n            if (!tableNodes(schema).includes(node.type)) {\n                return false; // don't descend into non-table nodes\n            }\n\n            if (node.type === schema.nodes.table_row) {\n                targetCell =\n                    node.childCount >= cellIndex + 1\n                        ? node.child(cellIndex)\n                        : null;\n            }\n\n            if (targetCell && node == targetCell) {\n                resolvedPositions.push(table.resolve(pos + 1));\n            }\n        });\n\n        let tr = state.tr;\n        for (const cellPosition of resolvedPositions.reverse()) {\n            tr = tr.delete(\n                tableOffset + cellPosition.start() - 1,\n                tableOffset + cellPosition.end() + 1\n            );\n        }\n\n        dispatch(tr.scrollIntoView());\n    }\n\n    return true;\n}\n\nexport function removeTableContentCommand(\n    state,\n    dispatch\n) {\n    if (!inTable(state)) {\n        return false;\n    }\n\n    const { $from, $to } = state.selection;\n\n    // selection includes entire table\n    if ($from.start(-3) >= $from.pos - 3 && $from.end(-3) <= $to.pos + 3) {\n        return removeTableCommand(state, dispatch);\n    }\n\n    // selection includes entire row\n    if ($from.start(-1) >= $from.pos - 1 && $from.end(-1) <= $to.pos + 1) {\n        return removeRowCommand(state, dispatch);\n    }\n\n    // selection contains two arbitrary cells?\n    // prevent delete operation to prevent deleting the cell nodes\n    // themselves and breaking the table structure\n    if (!$from.sameParent($to)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction moveToCellCommand(\n    state,\n    dispatch,\n    direction\n) {\n    if (direction !== -1 && direction !== 1) {\n        return false;\n    }\n\n    if (!inTable(state)) return false;\n\n    const $head = state.selection.$head;\n\n    for (let level = -1; level > -4; level--) {\n        const parentIndex = $head.index(level);\n        const parent = $head.node(level);\n\n        if (!parent) continue;\n\n        // every time we want to skip the boundaries of a node (a cell, a row, ...)\n        // we have to consider the node's opening and closing positions, too. For\n        // each level, this will add an additional offset of 2 that we need to skip\n        const nodeOffset = 2;\n\n        const target = parent.maybeChild(parentIndex + direction);\n\n        if (!target) continue;\n\n        const newPos =\n            direction === -1\n                ? $head.start() - nodeOffset * (level * -1)\n                : $head.end() + nodeOffset * (level * -1);\n\n        dispatch(\n            state.tr\n                .setSelection(require('@askvortsov-rich-text').Selection.near(state.tr.doc.resolve(newPos), 1))\n                .scrollIntoView()\n        );\n\n        return true;\n    }\n\n    // we're at the end of the table and still want to move forward?\n    // let's move the cursor below the table!\n    if (direction === 1) {\n        return moveSelectionAfterTableCommand(state, dispatch);\n    } else {\n        return moveSelectionBeforeTableCommand(state, dispatch);\n    }\n}\n\nexport function moveToPreviousCellCommand(\n    state,\n    dispatch\n) {\n    return moveToCellCommand(state, dispatch, -1);\n}\n\nexport function moveToNextCellCommand(\n    state,\n    dispatch\n) {\n    return moveToCellCommand(state, dispatch, +1);\n}\n\nfunction removeTableCommand(\n    state,\n    dispatch\n) {\n    const $head = state.selection.$head;\n    if (dispatch) {\n        dispatch(state.tr.deleteRange($head.start(-3) - 1, $head.end(-3) + 1));\n    }\n\n    return true;\n}\n\nexport function insertTableCommand(numRows = 4, numCols = 3, labelCells = true) {\n    return (state, dispatch) => {\n        // TODO: Clean this up\n        const schema = state.schema;\n\n        // TODO: Reenable this\n        // if (!setBlockType(schema.nodes.table)(state)) {\n        //     return false;\n        // }\n\n        if (!dispatch) return true;\n\n        let headerIndex = 1;\n        let cellIndex = 1;\n        const cell = () =>\n            schema.nodes.table_cell.create(\n                null,\n                schema.text(labelCells ? `cell ${cellIndex++}` : ' ')\n            );\n        const header = () =>\n            schema.nodes.table_header.create(\n                null,\n                schema.text(labelCells ?`header ${headerIndex++}`: ' ')\n            );\n        const row = (...cells) =>\n            schema.nodes.table_row.create(null, cells);\n        const head = (row) =>\n            schema.nodes.table_head.create(null, row);\n        const body = (...rows) =>\n            schema.nodes.table_body.create(null, rows);\n        const table = (head, body) =>\n            schema.nodes.table.createChecked(null, [head, body]);\n        const paragraph = () => schema.nodes.paragraph.create(null);\n\n        // !MODIFIED\n        const t = table(\n            head(row(...Array(numCols).fill(0).map(header))),\n            body(\n                ...Array(numRows - 1).fill(0).map(_ => {\n                    return row(...Array(numCols).fill(0).map(cell))\n                })\n            )\n        );\n        // !MODIFIED\n\n        let tr = state.tr.replaceSelectionWith(t);\n        dispatch(tr.scrollIntoView());\n\n        // if there's no selectable node after the inserted table, insert an empty paragraph\n        // because it makes selecting, navigating much more intuitive\n        const newState = state.apply(tr);\n        const nodeAfterTable = newState.doc.nodeAt(newState.tr.selection.to - 1);\n        if (nodeAfterTable && nodeAfterTable.type === schema.nodes.text) {\n            tr = newState.tr.insert(newState.tr.selection.to, paragraph());\n            dispatch(tr.scrollIntoView());\n        }\n\n        return true;\n    }\n}","import Button from 'flarum/common/components/Button';\nimport Switch from 'flarum/common/components/Switch';\nimport listItems from 'flarum/common/helpers/listItems';\nimport extractText from 'flarum/common/utils/extractText';\nimport Stream from 'flarum/common/utils/Stream';\nimport { insertTableColumnAfterCommand, insertTableColumnBeforeCommand, insertTableCommand, insertTableRowBeforeCommand, insertTableRowAfterCommand, inTable, removeColumnCommand, removeRowCommand } from '../proseMirror/commands';\n\nconst FormDropdown = require('@askvortsov-rich-text').components.FormDropdown;\n\nexport default class TableDropdown extends FormDropdown {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.state = this.attrs.state;\n    this.state.addItem(\n      this.attrs.type,\n      (state, dispatch) => {\n        return this.command(state, dispatch);\n      },\n      this.onEditorUpdate.bind(this)\n    );\n\n    this.numCols = Stream(3);\n    this.numRows = Stream(4);\n    this.labelCells = Stream(true);\n  }\n\n  getMenu(items) {\n    if (!this.inTable()) {\n      return super.getMenu(items);\n    }\n\n    const commands = [\n      {\n        translation: 'remove_column',\n        command: removeColumnCommand\n      },\n      {\n        translation: 'insert_column_before',\n        command: insertTableColumnBeforeCommand\n      },\n      {\n        translation: 'insert_column_after',\n        command: insertTableColumnAfterCommand\n      },\n      {\n        translation: 'remove_row',\n        command: removeRowCommand\n      },\n      {\n        translation: 'insert_row_before',\n        command: insertTableRowBeforeCommand\n      },\n      {\n        translation: 'insert_row_after',\n        command: insertTableRowAfterCommand\n      },\n    ];\n\n    return (\n      <ul className={'Dropdown-menu dropdown-menu TableDropdownMenu'}>\n        {listItems(commands.map(command => <Button\n          onclick={this.click.bind(this, command.command)}\n          onkeydown={this.keydown.bind(this, command.command)}>\n          {app.translator.trans(`askvortsov-pipetables.forum.composer.table_menu.${command.translation}`)}\n        </Button>))}\n      </ul>\n    );\n  }\n\n  fields() {\n    const items = super.fields();\n\n    items.add(\n      'numCols',\n      <div className=\"Form-group\">\n        <label>{app.translator.trans('askvortsov-pipetables.forum.composer.table_menu.num_cols')}</label>\n        <input\n          className=\"FormControl\"\n          name=\"numCols\"\n          type=\"number\"\n          placeholder={extractText(app.translator.trans('askvortsov-pipetables.forum.composer.table_menu.num_cols'))}\n          bidi={this.numCols}\n          required\n        />\n      </div>,\n      10\n    );\n\n    items.add(\n      'numRows',\n      <div className=\"Form-group\">\n        <label>{app.translator.trans('askvortsov-pipetables.forum.composer.table_menu.num_rows')}</label>\n        <input\n          className=\"FormControl\"\n          name=\"numRows\"\n          type=\"number\"\n          placeholder={extractText(app.translator.trans('askvortsov-pipetables.forum.composer.table_menu.num_rows'))}\n          bidi={this.numRows}\n          required\n        />\n      </div>,\n      10\n    );\n\n    items.add(\n      'labelCells',\n\n      <div className=\"Form-group\">\n        {Switch.component({\n          state: this.labelCells(),\n          onchange: this.labelCells\n        }, app.translator.trans('askvortsov-pipetables.forum.composer.table_menu.label_cells'))}\n      </div>,\n      9\n    )\n\n\n    return items;\n  }\n\n  inTable() {\n    return inTable(this.attrs.state.editorView.state);\n  }\n\n  onEditorUpdate() {\n    this.currInTable = this.inTable();\n  }\n\n  keydown(command, e) {\n    if (e.key === ' ' || e.key === 'Enter') {\n      this.click(command, e);\n    }\n  }\n\n  click(command, e) {\n    e.preventDefault();\n    this.command = command;\n    return this.state.run(this.attrs.type);\n  }\n\n  insert() {\n    if (!this.inTable()) {\n      this.command = insertTableCommand(parseInt(this.numRows()), parseInt(this.numCols()), this.labelCells());\n      this.state.run(this.attrs.type);\n    }\n  }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import { moveSelectionAfterTableCommand, moveToNextCellCommand, moveToPreviousCellCommand, removeTableContentCommand } from \"./commands\";\n\nexport const tableKeymap = {\n    \"Mod-Enter\": moveSelectionAfterTableCommand,\n    \"Shift-Enter\": moveSelectionAfterTableCommand,\n    \"Enter\": moveToNextCellCommand,\n    \"Backspace\": removeTableContentCommand,\n    \"Delete\": removeTableContentCommand,\n    \"Mod-Backspace\": removeTableContentCommand,\n    \"Mod-Delete\": removeTableContentCommand,\n    \"Tab\": moveToNextCellCommand,\n    \"Shift-Tab\": moveToPreviousCellCommand,\n};","export const tableNodeSpec = {\n    content: \"table_head table_body*\",\n    isolating: true,\n    group: \"block\",\n    selectable: false,\n    parseDOM: [{ tag: \"table\" }],\n    toDOM() {\n        return [\n            \"div\",\n            { class: \"s-table-container\" },\n            [\"table\", { class: \"s-table\" }, 0],\n        ];\n    },\n};\n\nexport const tableHeadNodeSpec = {\n    content: \"table_row\",\n    isolating: true,\n    group: \"table_block\",\n    selectable: false,\n    parseDOM: [{ tag: \"thead\" }],\n    toDOM() {\n        return [\"thead\", 0];\n    },\n};\n\nexport const tableBodyNodeSpec = {\n    content: \"table_row+\",\n    isolating: true,\n    group: \"table_block\",\n    selectable: false,\n    parseDOM: [{ tag: \"tbody\" }],\n    toDOM() {\n        return [\"tbody\", 0];\n    },\n};\n\nexport const tableRowNodeSpec = {\n    content: \"(table_cell | table_header)+\",\n    isolating: true,\n    group: \"table_block\",\n    selectable: false,\n    parseDOM: [{ tag: \"tr\" }],\n    toDOM() {\n        return [\"tr\", 0];\n    },\n};\n\nexport const tableCellNodeSpec = {\n    content: \"inline*\",\n    isolating: true,\n    group: \"table_block\",\n    selectable: false,\n    attrs: {\n        style: { default: null },\n    },\n    parseDOM: [\n        {\n            tag: \"td\",\n            getAttrs(dom) {\n                const textAlign = dom.style.textAlign;\n                return textAlign ? { style: `text-align: ${textAlign}` } : null;\n            },\n        },\n    ],\n    toDOM(node) {\n        return [\"td\", node.attrs, 0];\n    },\n};\n\nexport const tableHeaderNodeSpec = {\n    content: \"inline*\",\n    isolating: true,\n    group: \"table_block\",\n    selectable: false,\n    attrs: {\n        style: { default: null },\n    },\n    parseDOM: [\n        {\n            tag: \"th\",\n            getAttrs(dom) {\n                const textAlign = dom.style.textAlign;\n                return textAlign ? { style: `text-align: ${textAlign}` } : null;\n            },\n        },\n    ],\n    toDOM(node) {\n        return [\"th\", node.attrs, 0];\n    },\n};\n","import { extend, override } from 'flarum/extend';\nimport TableDropdown from './components/TableDropdown';\nimport { tableKeymap } from './proseMirror/tableKeymap';\nimport { tableBodyNodeSpec, tableCellNodeSpec, tableHeaderNodeSpec, tableHeadNodeSpec, tableNodeSpec, tableRowNodeSpec } from './proseMirror/tableSchema';\n\nexport default function configureRichText() {\n    const ProseMirrorMenu = require('@askvortsov-rich-text').components.ProseMirrorMenu;\n\n    extend(ProseMirrorMenu.prototype, 'items', function (items) {\n        items.add('table', TableDropdown.component({\n            type: 'table',\n            icon: 'fas fa-table',\n            tooltip: app.translator.trans('askvortsov-pipetables.forum.composer.table_tooltip'),\n            state: this.attrs.state\n        }), 10);\n    });\n\n    const MarkdownSerializerBuilder = require('@askvortsov-rich-text').proseMirror.markdown.MarkdownSerializerBuilder;\n\n    extend(MarkdownSerializerBuilder.prototype, 'buildNodes', function (nodes) {\n        const richTextSchema = this.schema;\n        nodes.table = function table(state, node) {\n            function serializeTableHead(head) {\n                let columnAlignments = [];\n                head.forEach((headRow) => {\n                    if (headRow.type === richTextSchema.nodes.table_row) {\n                        columnAlignments = serializeTableRow(headRow);\n                    }\n                });\n\n                // write table header separator\n                for (const alignment of columnAlignments) {\n                    state.write(\"|\");\n\n                    state.write(\n                        alignment === \"left\" || alignment === \"center\" ? \":\" : \" \"\n                    );\n                    state.write(\"---\");\n                    state.write(\n                        alignment === \"right\" || alignment === \"center\" ? \":\" : \" \"\n                    );\n                }\n                state.write(\"|\");\n                state.ensureNewLine();\n            }\n\n            function serializeTableBody(body) {\n                body.forEach((bodyRow) => {\n                    if (bodyRow.type === richTextSchema.nodes.table_row) {\n                        serializeTableRow(bodyRow);\n                    }\n                });\n                state.ensureNewLine();\n            }\n\n            function serializeTableRow(row) {\n                const columnAlignment = [];\n                row.forEach((cell) => {\n                    if (\n                        cell.type === richTextSchema.nodes.table_header ||\n                        cell.type === richTextSchema.nodes.table_cell\n                    ) {\n                        const alignment = serializeTableCell(cell);\n                        columnAlignment.push(alignment);\n                    }\n                });\n                state.write(\"|\");\n                state.ensureNewLine();\n                return columnAlignment;\n            }\n\n            function serializeTableCell(cell) {\n                state.write(\"| \");\n                state.renderInline(cell);\n                state.write(\" \");\n\n                return findAlignment(cell);\n            }\n\n            function findAlignment(cell) {\n                const alignment = cell.attrs.style;\n                if (!alignment) {\n                    return null;\n                }\n\n                // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n                const match = alignment.match(/text-align:[ ]?(left|right|center)/);\n\n                if (match && match[1]) {\n                    return match[1];\n                }\n\n                return null;\n            }\n\n            // TODO: don't rely on node names\n            node.forEach((table_child) => {\n                if (table_child.type.name === 'table_head')\n                    serializeTableHead(table_child);\n                if (table_child.type.name === 'table_body')\n                    serializeTableBody(table_child);\n            });\n\n            state.ensureNewLine();\n            state.write(\"\\n\");\n        };\n    });\n\n    const MarkdownParserBuilder = require('@askvortsov-rich-text').proseMirror.markdown.MarkdownParserBuilder;\n\n    extend(MarkdownParserBuilder.prototype, 'buildTokens', function (tokens) {\n        Object.assign(tokens, {\n            table: {\n                block: \"table\",\n            },\n\n            thead: {\n                block: \"table_head\",\n            },\n\n            tbody: {\n                block: \"table_body\",\n            },\n\n            th: {\n                block: \"table_header\",\n                getAttrs: (tok) => ({\n                    style: tok.attrGet(\"style\"),\n                }),\n            },\n\n            tr: {\n                block: \"table_row\",\n            },\n\n            td: {\n                block: \"table_cell\",\n                getAttrs: (tok) => ({\n                    style: tok.attrGet(\"style\"),\n                }),\n            },\n        });\n    });\n\n    extend(MarkdownParserBuilder.prototype, 'buildTokenizer', function (tokenizer) {\n        tokenizer.enable('table');\n    });\n\n    const SchemaBuilder = require('@askvortsov-rich-text').proseMirror.markdown.SchemaBuilder;\n\n    override(SchemaBuilder.prototype, 'buildNodes', function (original) {\n        const nodes = original();\n\n        return nodes\n            .addBefore(\"image\", \"table\", tableNodeSpec)\n            .addBefore(\"image\", \"table_head\", tableHeadNodeSpec)\n            .addBefore(\"image\", \"table_body\", tableBodyNodeSpec)\n            .addBefore(\"image\", \"table_row\", tableRowNodeSpec)\n            .addBefore(\"image\", \"table_cell\", tableCellNodeSpec)\n            .addBefore(\"image\", \"table_header\", tableHeaderNodeSpec);\n    });\n\n    const ProseMirrorEditorDriver = require('@askvortsov-rich-text').proseMirror.ProseMirrorEditorDriver;\n\n    extend(ProseMirrorEditorDriver.prototype, 'buildPluginItems', function (items) {\n        items.add('tableKeymap', require('@askvortsov-rich-text').keymap(tableKeymap), 10)\n    });\n}","import app from 'flarum/app';\nimport { extend } from 'flarum/extend'\nimport Post from 'flarum/components/Post'\nimport configureRichText from './configureRichText';\n\napp.initializers.add('askvortsov-pipetables', () => {\n\textend(Post.prototype, 'oncreate', function () {\n\t\tfunction addDataLabelsToTable(table) {\n\t\t\tlet labels = [];\n\t\t\tfor (let th of table.getElementsByTagName('th')) {\n\t\t\t\tlabels.push(th.textContent);\n\t\t\t}\n\t\t\tfor (let tr of table.getElementsByTagName('tr')) {\n\t\t\t\tlet i = -1;\n\t\t\t\tfor (let td of tr.getElementsByTagName('td')) {\n\t\t\t\t\ttd.setAttribute('data-label', labels[++i] || '');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (let table of document.getElementsByTagName('table')) {\n\t\t\taddDataLabelsToTable(table);\n\t\t}\n\t});\n\n\tif ('askvortsov-rich-text' in flarum.extensions) {\n\t\tconfigureRichText();\n\t}\n});\n"],"sourceRoot":""}